server.port=8282
#default port number - 8080 ,http web port:80
#default값은 /이다.  /myapp과 같이 변경가능하다. 
#server.servlet.context-path=/  

#스키마생성 (create, create-drop, update:변경 부분만 반영, validate, none)
#table을 자동생성할것인지 , 수동생성할것인지
#큰규모의 프로젝트는 테이블을 별도로 생성하고 코드를 작성하는 것이 일반적이다.
#update:변경부분만 반영
spring.jpa.hibernate.ddl-auto=update
#DDL생성시 데이터베이스 고유의 기능을 사용하는가?
spring.jpa.generate-ddl=false
#실행되는 SQL문을 보여줄 것인가? 
spring.jpa.show-sql=true


#Dialect(방언) :  Hibernate는 DB에 맞게 SQL문을 생성하기 위해 방언을 사용한다.
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#DEBUG-더 상세하게 볼수있음
logging.level.org.hibernate=info
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#spring.jpa.database=oracle

spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3333/jejudojang
spring.datasource.username=admin
spring.datasource.password=1234

#할필요 X 나중에 jsp쓰고싶으면
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
##thymeleaf를 사용하다 수정 사항이 생길 때 수정을 하면 재시작을 해줘야 한다. 이를 무시하고 브라우저 새로고침시 수정사항 반영을 취해 cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# security
spring.profiles.include=oauth

# sequence
# spring.jpa.properties.hibernate.id.new_generator_mappings=false

## mail default 
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=yckkcy2@gmail.com
spring.mail.password=ekstls66^^
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.mime.charset=UTF-8
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.starttls.enable=true